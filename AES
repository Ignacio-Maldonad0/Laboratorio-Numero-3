import sys
import os
import binascii
from Cryptodome.Cipher import AES
from Cryptodome import Random
from binascii import b2a_hex



archivo1 = open("Mensaje.txt", mode="r")
MensajeE = archivo1.read()
archivo = open("ClavePublica.txt", mode="r")
claveS = archivo.read()
clave = int(input("Ingrese clave Publica: "))

if str(clave) == claveS:
    print("Clave Correcta, Su mensaje cifrado se encuentra en el archivo MensajeEntrada.txt")
    print("Se asume que B descifra el mensaje y este queda en MensajeRecibido.txt")


else:
    sys.exit("Clave Incorrecta")   
data = MensajeE


key = b'this is a 16 key'               
iv = Random.new().read(AES.block_size)

# Función de cifrado, creación usando la tecla y IV, utilizando el modo MODE_CFB
myencrypt = AES.new(key, AES.MODE_CFB, iv)

# La longitud debe ser un múltiplo de 16, si la longitud es inferior a 16, debe constituir un múltiplo de 16.
# Agregue IV (vector de clave) al comienzo del cifrado cifrado, juntos
encrypttext = iv + myencrypt.encrypt(data.encode())

# Función de descifra, generar nuevos objetos AES con clave y IV (primero 16 cps
mydecrypt = AES.new(key, AES.MODE_CFB, encrypttext[:16])

# Use el objeto AES recién generado, el descifrado cifrado cifrado cifrado
decrypttext = mydecrypt.decrypt(encrypttext[16:])

file2 = open ("MensajeEntrada.txt","w")
file2.write(str(encrypttext))
file2.close()


file1 = open ("MensajeRecibido.txt","w")
file1.write(str(decrypttext))
file1.close()
